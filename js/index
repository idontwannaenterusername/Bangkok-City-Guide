// Simple single-file navigation: shows/hides "pages" (sections with data-page)
const pageSections = document.querySelectorAll('[data-page]');
const tocLinks = document.querySelectorAll('.toclink');

function showPage(id){
  pageSections.forEach(s=>{
    if ('#'+s.id === id || s.id === id.replace('#','')){
      s.hidden = false;
      s.scrollIntoView({behavior:'smooth'});
    } else {
      s.hidden = true;
    }
  });
  // update active state in TOC
  tocLinks.forEach(a=> a.classList.toggle('active', a.getAttribute('href')===id));
  if (history.pushState) history.pushState(null, null, id.startsWith('#')?id:('#'+id));
}

// attach click handlers for the small "Open details" buttons
document.querySelectorAll('[data-open]').forEach(btn=>{
  btn.addEventListener('click', e=>{
    const target = btn.getAttribute('data-open');
    const hash = target.startsWith('#')?target:('#'+target);
    showPage(hash);
  });
});

// toc links (right column)
tocLinks.forEach(a=>{
  a.addEventListener('click', e=>{
    e.preventDefault();
    const id = a.getAttribute('href');
    showPage(id);
  });
});

// On load, open hash if present
window.addEventListener('load', ()=>{
  const h = location.hash || '#highlights';
  const valid = Array.from(pageSections).some(s => ('#'+s.id) === h);
  if (valid) showPage(h);
  else document.getElementById('highlights').scrollIntoView();
});

window.addEventListener('popstate', ()=>{
  const h = location.hash || '#highlights';
  const valid = Array.from(pageSections).some(s => ('#'+s.id) === h);
  if (valid) showPage(h);
});
 
